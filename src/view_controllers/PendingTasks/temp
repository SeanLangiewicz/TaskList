package view_controllers.PendingTasks;


import DAO.mainTaskListImpl;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import model.Tasks;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;


public class pendingTaskController implements Initializable
{
    Parent scene;
    Stage stage;

    private static ObservableList<Tasks> mainTaskList = FXCollections.observableArrayList();


    @FXML
    private Label DescriptionLbl;

    @FXML
    private Button backBtn;

    @FXML
    private ComboBox<?> completedCmblBx;

    @FXML
    private Button deleteTaskBtn;

    @FXML
    private Button editTask;

    @FXML
    private Label isCompletedLbl;

    @FXML
    private Label nameLbl;

    @FXML
    private TableView<Tasks> taskTblView;

    @FXML
    private TableColumn<?, ?> tblCompleted;

    @FXML
    private TableColumn<?, ?> tblDescription;

    @FXML
    private TableColumn<?, ?> tblID;

    @FXML
    private TableColumn<?, ?> tblName;

    @FXML
    private Label urgencyLbl;

    @FXML
    void onActionCreateBtn(ActionEvent event) {

    }



    @FXML
    void onActionDeleteTask(ActionEvent event) throws IOException
    {
        stage = (Stage) ((Button)event.getSource()).getScene().getWindow();
        scene = FXMLLoader.load(getClass().getResource("/Test/test.fxml"));

        stage.setScene(new Scene(scene));
        stage.show();


    }




    @Override
    public void initialize(URL url, ResourceBundle resourceBundle)
    {
        //TODO
        // Create a new button for the note, when clicking the button, a pop up should appear with the note information

        try
        {


           mainTaskList.addAll(mainTaskListImpl.selectAllTasks());
            taskTblView.getItems().clear();
            mainTaskList.clear();

            mainTaskList.addAll(mainTaskListImpl.selectAllTasks());




            tblID.setCellValueFactory(new PropertyValueFactory<>("id"));
            tblName.setCellValueFactory(new PropertyValueFactory<>("name"));
            tblDescription.setCellValueFactory(new PropertyValueFactory<>("description"));
           // tblNote.setCellValueFactory(new PropertyValueFactory<>("note"));


                       tblCompleted.setCellValueFactory(cellData ->
            {

                boolean isComplete = cellData.getValue().isComplete();
                return new javafx.beans.property.SimpleStringProperty(isComplete ? "Yes" : "No");
            });





            taskTblView.setItems(mainTaskList);









        }
        catch (Exception e)
        {
            e.printStackTrace();
        }

    }
    @FXML
    void onActionBackBtn(ActionEvent event) throws IOException
    {
        stage = (Stage) ((Button)event.getSource()).getScene().getWindow();
        scene = FXMLLoader.load(getClass().getResource("/view_controllers/MainScene/mainScene.fxml"));
        stage.setTitle("Screen Selection Screen");
        stage.setScene(new Scene(scene));
        stage.show();


    }
    @FXML
    void onMouseClickTblView(MouseEvent event)
    {
        //

        try
        {



            FXMLLoader loader = new FXMLLoader();
            selectedTaskController detailsController = loader.getController();
            loader.setLocation(getClass().getResource("/view_controllers/SelectedTask/selectedTask.fxml"));




            //detailsController.sendRecord(taskTblView.getSelectionModel().getSelectedItem());



            System.out.println("Test Controller " + detailsController);





           // Scene scene = new Scene(loader.load());
           // Stage stage = new Stage();
          //  stage.setScene(scene);
          //  stage.show();
        }
        catch (Exception e)
        {
            System.out.println("Try Catch block " +e.toString());
        }

    }

    /*
    FXMLLoader loader = new FXMLLoader();
            loader.setLocation(getClass().getResource("/view_controllers/SelectedTask/selectedTask.fxml"));
            loader.load();

            selectedTaskController detailsController = loader.getController();
            detailsController.sendRecord(taskTblView.getSelectionModel().getSelectedItem());


            stage = (Stage) ((Button)event.getSource()).getScene().getWindow();
            Parent scene = loader.getRoot();
            stage.setScene(new Scene(scene));
            stage.show();
     */
    @FXML
    void onActionEditTask(ActionEvent event) throws IOException
    {
        try
        {



            FXMLLoader loader = new FXMLLoader();
            loader.setLocation(getClass().getResource("/view_controllers/SelectedTask/selectedTask.fxml"));
            loader.load();

            selectedTaskController detailsController = loader.getController();
            detailsController.sendRecord(taskTblView.getSelectionModel().getSelectedItem());

            Tasks selectedTask = taskTblView.getSelectionModel().getSelectedItem();

            int id = selectedTask.getId();
            System.out.println("id " + id);

            System.out.println(detailsController);

            /*
               stage = (Stage) ((Button)event.getSource()).getScene().getWindow();
            Parent scene = loader.getRoot();
            stage.setScene(new Scene(scene));
            stage.show();
             */

        }
        catch (Exception e)
        {
            System.out.println(e.toString());
        }




    }


}
